[
  {
    // Insert contents of primary selection.
    "keys": ["shift+insert"],
    "command": "paste",
    "args": {"clipboard": "selection"},
  },
  {
    "keys": ["ctrl+v"],
    "command": "paste_and_indent",
  },
  {
    "keys": ["ctrl+shift+v"],
    "command": "paste",
  },

  {
    "keys": ["shift+escape"],
    "command": "single_last_selection",
    "context": [
      { "key": "num_selections", "operator": "not_equal", "operand": 1 },
    ],
  },

  {
    "keys": ["alt+backspace"],
    "command": "run_macro_file",
    "args": {"file": "Packages/Declaratives/Macros/delete_subword.sublime-macro"},
  },
  {
    "keys": ["alt+delete"],
    "command": "run_macro_file",
    "args": {"file": "Packages/Declaratives/Macros/delete_subword_forward.sublime-macro"},
  },


  // Use Ctrl-Tab for switching tabs as they appear in the tab bar rather than LIFO.
  { "keys": ["ctrl+tab"], "command": "next_view" },
  { "keys": ["ctrl+shift+tab"], "command": "prev_view" },
  { "keys": ["ctrl+pagedown"], "command": "next_view_in_stack" },
  { "keys": ["ctrl+pageup"], "command": "prev_view_in_stack" },

  // Special characters
  {
    "keys": ["ctrl+space"],
    "command": "insert",
    // Non-breaking space
    "args": {"characters": " "},
  },
  {
    "keys": ["ctrl+;"],
    "command": "insert",
    // Apostrophe
    "args": {"characters": "’"},
  },
  {
    "keys": ["ctrl+q"],
    "command": "insert_snippet",
    // Czech double quotes
    "args": {"contents": "„${0:$SELECTION}“"},
  },
  {
    "keys": ["ctrl+shift+q"],
    "command": "insert_snippet",
    // English double quotes
    "args": {"contents": "“${0:$SELECTION}”"},
  },
  {
    "keys": ["ctrl+b"],
    "command": "insert_snippet",
    // Markdown bold
    "args": {"contents": "**${0:$SELECTION}**"},
    "context": [
      { "key": "selector", "operator": "equal", "operand": "text.html.markdown" },
    ],
  },
  {
    "keys": ["ctrl+i"],
    "command": "insert_snippet",
    // Markdown italic
    "args": {"contents": "*${0:$SELECTION}*"},
    "context": [
      { "key": "selector", "operator": "equal", "operand": "text.html.markdown"},
    ],
  },
  {
    "keys": ["ctrl+m"],
    "command": "insert_snippet",
    // Markdown highlight
    "args": {"contents": "<mark>${0:$SELECTION}</mark>"},
    "context": [
      { "key": "selector", "operator": "equal", "operand": "text.html.markdown" },
    ],
  },
  {
    "keys": ["$"],
    "command": "insert_snippet",
    // Markdown math
    "args": {"contents": "\\$${0:$SELECTION}\\$"},
    "context": [
      { "key": "selector", "operator": "equal", "operand": "text.html.markdown" },
    ],
  },

  // LSP
  {
    "keys": ["primary+."],
    "command": "lsp_code_actions",
    "context": [
      { "key": "lsp.session_with_capability", "operand": "codeActionProvider.codeActionKinds" },
    ],
  },

  // Angle bracket support.
  // https://forum.sublimetext.com/t/angle-bracket-deletes-selected-word-instead-of-to-embed-it-foo-how-to-enable/23896/2
  {
    "keys": ["<"],
    "command": "insert_snippet",
    "args": {"contents": "<${0:$SELECTION}>"},
    "context": [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
    ]
  },
  {
    "keys": ["backspace"],
    "command": "run_macro_file",
    "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"},
    "context": [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "<$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true },
    ]
  },
  {
    "keys": ["<"],
    "command": "insert_snippet",
    "args": {"contents": "<$0>"},
    "context": [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|>|$)", "match_all": true },
    ]
  },
  {
    "keys": [">"],
    "command": "move",
    "args": {"by": "characters", "forward": true},
    "context": [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true },
    ]
  },

  {
    "keys": ["ctrl+alt+f"],
    // Depends on https://packagecontrol.io/packages/FilterPipes
    "command": "filter_pipes_process",
    "args": {
      "command": ["nixfmt"],
      "shell": false,
    },
    "context": [
      { "key": "selector", "operator": "equal", "operand": "source.nix" },
    ],
  },

  {
    "keys": ["ctrl+shift+)"],
    // Depends on https://packagecontrol.io/packages/ParentalControl
    "command": "remove_parentheses",
  },
]
