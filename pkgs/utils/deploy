#!/usr/bin/env python3

import argparse
import json
import os
import platform
import subprocess
import sys

def main(args):
    same_host = args.hostname == platform.node()

    priv_run = []

    # We only need to run privileged on the same host, otherwise we need to ssh as root ðŸ˜¿
    if same_host:
        priv_run = ['sudo']

    nix_args = [
        # Print build logs
        '-L',
        # Do not rebuild nixos-rebuild or Nix, we are already taking them from shell.
        '--fast',
    ]
    if args.nixpkgs:
        nix_args += ['--override-input', 'nixpkgs', args.nixpkgs, '--no-write-lock-file']
    if args.impure:
        nix_args += ['--impure']
    if args.keep_going:
        nix_args += ['--keep-going']
    if args.show_trace:
        nix_args += ['--show-trace']

    if args.target_host is not None:
        nix_args += ['--target-host', args.target_host]
    elif not same_host:
        connection_string = json.loads(subprocess.check_output(['nix', 'eval', '--json', '--impure', '--expr', f'(import ./hosts/list.nix).{args.hostname}.connectionString or null']))

        if not connection_string:
            print(f'No connection string defined in hosts/list.nix for host {args.hostname}', file=sys.stderr)
            sys.exit(1)

        nix_args += ['--target-host', connection_string]

    path = os.getcwd()
    attr = f'{path}#{args.hostname}'

    nix_shell = priv_run + ['nixos-rebuild'] + nix_args + ['--flake', attr] + [f'{args.action}']

    os.execvp(nix_shell[0], nix_shell)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Rebuild system')
    parser.add_argument('--nixpkgs', dest='nixpkgs', help='Override the nixpkgs flake input with this path', nargs='?')
    parser.add_argument('--impure', dest='impure', action='store_true', help='Allow access to mutable paths and repositories')
    parser.add_argument('--keep-going', '-k', dest='keep_going', action='store_true', help='Do not stop after first failure')
    parser.add_argument('--show-trace', dest='show_trace', action='store_true', help='Enable the show-trace setting')
    parser.add_argument('--target-host', dest='target_host', help='Override the host to deploy to')
    parser.add_argument('hostname', help='Host whose configuration should we rebuild', nargs='?', default=platform.node())
    parser.add_argument('action', choices=['switch', 'boot', 'test'])

    args = parser.parse_args()

    main(args)
